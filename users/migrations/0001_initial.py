# Generated by Django 4.0.2 on 2022-02-25 19:16

import common.validators
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_resized.forms
import tinymce.models
import users.models.m_user_profile
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('services', '0001_initial'),
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Define si este registro estará habilitado', verbose_name='Registro habilitado')),
                ('order', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Índice númerico de ordenamiento de este registro', null=True, verbose_name='índice de ordenamiento')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveSmallIntegerField(default=1)),
                ('address', models.CharField(max_length=128, verbose_name='Dirección de entrega')),
                ('receptor_name', models.CharField(max_length=40, verbose_name='Nombre del receptor')),
                ('phone', models.CharField(max_length=10, verbose_name='Teléfono')),
                ('reference', models.CharField(blank=True, max_length=64, null=True, verbose_name='Referencia del lugar')),
                ('broker_id', models.CharField(max_length=64, verbose_name='Broker ID')),
                ('backup_user_name', models.CharField(max_length=64, verbose_name='Nombre del comprador')),
            ],
            options={
                'verbose_name': 'Órden de compra',
                'verbose_name_plural': 'Órdenes de compra',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Define si este registro estará habilitado', verbose_name='Registro habilitado')),
                ('order', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Índice númerico de ordenamiento de este registro', null=True, verbose_name='índice de ordenamiento')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveSmallIntegerField(default=1)),
                ('token', models.UUIDField(blank=True, default=uuid.uuid4, null=True)),
                ('newsletter', models.BooleanField(default=False)),
                ('img_picture', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format='JPEG', keep_meta=True, null=True, quality=90, size=[512, 512], upload_to=users.models.m_user_profile.picture)),
                ('promotions', models.BooleanField(default=False)),
                ('biography', tinymce.models.HTMLField(blank=True, default='Biografia del expositor', null=True)),
                ('owner_position', models.CharField(blank=True, max_length=32, null=True, verbose_name='Puesto de Expositor')),
                ('owner_position_description', tinymce.models.HTMLField(blank=True, default='Descripción del puesto', null=True, verbose_name='Descripción del puesto')),
                ('owner_phone', models.CharField(blank=True, max_length=10, null=True, verbose_name='Teléfono de Expositor')),
                ('owner_office_phone', models.CharField(blank=True, max_length=10, null=True, verbose_name='Teléfono de oficina de Expositor')),
                ('owner_email', models.EmailField(blank=True, max_length=256, null=True, verbose_name='Email de Expositor')),
                ('owner_whatsapp', models.CharField(blank=True, max_length=14, null=True, verbose_name='Whats App de Expositor')),
                ('owner_address', models.CharField(blank=True, max_length=256, null=True, verbose_name='Dirección de Expositor')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User profile',
                'verbose_name_plural': 'User profiles',
            },
        ),
        migrations.CreateModel(
            name='UserOrderBuyableItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Define si este registro estará habilitado', verbose_name='Registro habilitado')),
                ('order', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Índice númerico de ordenamiento de este registro', null=True, verbose_name='índice de ordenamiento')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveSmallIntegerField(default=1)),
                ('backup_name', models.CharField(max_length=64, verbose_name='Nombre de elemento comprado')),
                ('backup_user_name', models.CharField(max_length=64, verbose_name='Nombre del comprador')),
                ('backup_final_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Precio final')),
                ('quantity', models.PositiveSmallIntegerField(default=1, help_text='Cantidad comprada', verbose_name='Cantidad')),
                ('product', models.ForeignKey(blank=True, help_text='Producto de la promoción', null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Producto')),
                ('purchase_order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.userorder', verbose_name='Orden de compra')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.service', verbose_name='Servicio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Elemento de la órden',
                'verbose_name_plural': 'Elementos de la órden',
            },
        ),
        migrations.AddField(
            model_name='userorder',
            name='order_items',
            field=models.ManyToManyField(blank=True, related_name='order_buyable_items', to='users.UserOrderBuyableItem', verbose_name='Elementos de la órden'),
        ),
        migrations.AddField(
            model_name='userorder',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario'),
        ),
        migrations.CreateModel(
            name='UserFavoriteBuyableItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Define si este registro estará habilitado', verbose_name='Registro habilitado')),
                ('order', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Índice númerico de ordenamiento de este registro', null=True, verbose_name='índice de ordenamiento')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveSmallIntegerField(default=1)),
                ('backup_name', models.CharField(max_length=64, verbose_name='Nombre de elemento comprado')),
                ('backup_user_name', models.CharField(max_length=64, verbose_name='Nombre del comprador')),
                ('backup_final_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Precio final')),
                ('product', models.ForeignKey(blank=True, help_text='Producto de la promoción', null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Producto')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.service', verbose_name='Servicio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Elemento de compra favorito',
                'verbose_name_plural': 'Elementos de compra favoritos',
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Define si este registro estará habilitado', verbose_name='Registro habilitado')),
                ('order', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Índice númerico de ordenamiento de este registro', null=True, verbose_name='índice de ordenamiento')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveSmallIntegerField(default=1)),
                ('alias', models.CharField(max_length=32)),
                ('receptor_name', models.CharField(blank=True, max_length=64, null=True, validators=[common.validators.ModelValidators.name])),
                ('phone', models.CharField(blank=True, max_length=10, null=True, validators=[common.validators.ModelValidators.us_phone])),
                ('zip_code', models.CharField(blank=True, max_length=5, null=True, validators=[common.validators.ModelValidators.us_zip_code])),
                ('street', models.CharField(max_length=32)),
                ('ext_number', models.CharField(blank=True, max_length=5, null=True)),
                ('int_number', models.CharField(blank=True, max_length=5, null=True)),
                ('reference', models.CharField(blank=True, max_length=128, null=True)),
                ('city', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_city_address', to='common.city')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User address',
                'verbose_name_plural': "User address'",
            },
        ),
        migrations.AlterUniqueTogether(
            name='userorder',
            unique_together={('user', 'broker_id')},
        ),
        migrations.CreateModel(
            name='UserCartBuyableItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enabled', models.BooleanField(default=True, help_text='Define si este registro estará habilitado', verbose_name='Registro habilitado')),
                ('order', models.PositiveSmallIntegerField(blank=True, default=0, help_text='Índice númerico de ordenamiento de este registro', null=True, verbose_name='índice de ordenamiento')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('version', models.PositiveSmallIntegerField(default=1)),
                ('backup_name', models.CharField(max_length=64, verbose_name='Nombre de elemento comprado')),
                ('backup_user_name', models.CharField(max_length=64, verbose_name='Nombre del comprador')),
                ('backup_final_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Precio final')),
                ('quantity', models.PositiveSmallIntegerField(default=1, help_text='Cantidad comprada', verbose_name='Cantidad')),
                ('product', models.ForeignKey(blank=True, help_text='Producto de la promoción', null=True, on_delete=django.db.models.deletion.CASCADE, to='products.product', verbose_name='Producto')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.service', verbose_name='Servicio')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Usuario')),
            ],
            options={
                'verbose_name': 'Carrito de compras',
                'verbose_name_plural': 'Carritos de compras',
                'unique_together': {('user', 'service'), ('user', 'product')},
            },
        ),
    ]
